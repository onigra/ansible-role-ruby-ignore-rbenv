---
- name: Ruby already install check
  shell: bash -lc "ruby --version"
  changed_when: false
  failed_when: false
  check_mode: no
  register: ruby_version

- name: Install dependencies
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - build-essential
    - libssl-dev
    - libreadline-dev
    - zlib1g-dev
    - libyaml-dev
    - libffi-dev
    - libxml2-dev
  when: ruby_version.rc != 0 or ruby_version.stdout.find(ruby_ignore_rbenv.ruby_version) == -1

- name: Clone ruby-build
  git:
    repo: "{{ ruby_ignore_rbenv.ruby_build_repo }}"
    dest: /tmp/ruby-build
  when: ruby_version.rc != 0 or ruby_version.stdout.find(ruby_ignore_rbenv.ruby_version) == -1

- name: Install ruby-build
  shell: /tmp/ruby-build/install.sh
  when: ruby_version.rc != 0 or ruby_version.stdout.find(ruby_ignore_rbenv.ruby_version) == -1

- name: Install ruby
  command: /usr/local/bin/ruby-build {{ ruby_ignore_rbenv.ruby_version }} /opt/ruby-{{ ruby_ignore_rbenv.ruby_version }}
  when: ruby_version.rc != 0 or ruby_version.stdout.find(ruby_ignore_rbenv.ruby_version) == -1

- name: Set ruby.sh
  template:
    src: ruby.sh.j2
    dest: /etc/profile.d/ruby.sh
    mode: 0644
    owner: root
  when: ruby_version.rc != 0 or ruby_version.stdout.find(ruby_ignore_rbenv.ruby_version) == -1

- name: Uninstall rbenv-install
  file:
    state: absent
    path: /usr/local/bin/rbenv-install

- name: Uninstall rbenv-uninstall
  file:
    state: absent
    path: /usr/local/bin/rbenv-uninstall

- name: Uninstall ruby-build
  file:
    state: absent
    path: /usr/local/bin/ruby-build

- name: Remove ruby-build
  file:
    state: absent
    path: /tmp/ruby-build

